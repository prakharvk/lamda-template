<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="46" failures="0" name="com.amazon.dao.OrderDaoTest" time="1.005" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="14.0.1+7"/>
    <property name="sun.boot.library.path" value="C:\Users\prakh\.jdks\openjdk-14.0.1\bin"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\prakh\IdeaProjects\lambda-template"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\prakh\IdeaProjects\lambda-template"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="14.0.1+7"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\prakh\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\plugins\maven\lib\maven3\bin\..\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\prakh\.jdks\openjdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python38\Scripts\;C:\Python38\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Yarn\bin\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Users\prakh\AppData\Local\Microsoft\WindowsApps;C:\Users\prakh\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\prakh\AppData\Roaming\npm;C:\Users\prakh\AppData\Local\Yarn\bin;C:\Users\prakh\.jdks\openjdk-14.0.1\bin;C:\Program Files\Amazon\AWSSAMCLI\bin;C:\Users\prakh\.aws;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\plugins\maven\lib\maven3\bin;;."/>
    <property name="maven.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\plugins\maven\lib\maven3\bin\../conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="58.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\plugins\maven\lib\maven3\bin\..\lib\jansi-native"/>
    <property name="user.home" value="C:\Users\prakh"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.specification.version" value="14"/>
    <property name="user.name" value="prakh"/>
    <property name="java.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\plugins\maven\lib\maven3\bin\..\boot\plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="14"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.home" value="C:\Users\prakh\.jdks\openjdk-14.0.1"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="14.0.1"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="sun.stderr.encoding" value="cp437"/>
    <property name="maven.home" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\plugins\maven\lib\maven3\bin\.."/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2020-04-14"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.stdout.encoding" value="cp437"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenVersionNull_throwsIllegalArgumentException" time="0.082"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="createOrder_whenRequestNull_throwsIllegalArgumentException" time="0.001"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrders_whenTableNotEmpty_butLastEvaluatedKeyHasOrderIdSetToUnsetAv_throwsIllegalStateException" time="0.33"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithUnsetPreTaxAV_throwsIllegalStateException" time="0.039"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenTableDoesNotExist_throwsTableDoesNotExistException" time="0.093"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithUnsetPostTaxAV_throwsIllegalStateException" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithUnsetOrderIdAV_throwsIllegalStateException" time="0.001"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="deleteOrder_whenDeleteItemReturnsNull_throwsIllegalStateException" time="0.034"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenTableDoesNotExist_throwsTableDoesNotExistException" time="0"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrders_whenTableNotEmpty_returnsPage" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithVersionOfWrongType_throwsIllegalStateException" time="0.01"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenPreTaxAmountNull_throwsIllegalArgumentException" time="0.001"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrders_whenTableDoesNotExist_throwsTableDoesNotExistException" time="0.004"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenPostTaxAmountNull_throwsIllegalArgumentException" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenOrderExists_returnsOrder" time="0.006"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithInvalidPostTax_throwsIllegalStateException" time="0.005"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenTableDoesNotExistOnLoadItem_throwsTableDoesNotExistException" time="0.003"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenAllNotSet_throwsIllegalArgumentException" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrders_whenTableNotEmpty_butLastEvaluatedKeyHasOrderIdSetToEmptyString_throwsIllegalStateException" time="0.007"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="createOrder_whenOrderDoesNotExist_createsOrderWithPopulatedOrderId" time="0.24"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithUnsetVersionAV_throwsIllegalStateException" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithInvalidVersion_throwsIllegalStateException" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithEmptyCustomerId_throwsIllegalStateException" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="createOrder_whenAlreadyExists_throwsCouldNotCreateOrderException" time="0.035"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenOrderIdSetButEmpty_throwsIllegalArgumentException" time="0.001"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="deleteOrder_whenTableDoesNotExist_throwsTableDoesNotExistException" time="0.004"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="deleteOrder_whenDeleteItemReturnsOkOrderItem_returnsDeletedOrder" time="0.012"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithUnsetCustomerIdAV_throwsIllegalStateException" time="0"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithPreTaxWrongType_throwsIllegalStateException" time="0"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrders_whenTableEmpty_returnsEmptyPage" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenAllSet_returnsUpdate" time="0.016"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithEmptyOrderId_throwsIllegalStateException" time="0.008"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="createOrder_whenTableDoesNotExist_throwsTableDoesNotExistException" time="0.004"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsEmptyHashMap_throwsIllegalStateException" time="0.003"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithInvalidPreTax_throwsIllegalStateException" time="0.018"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="deleteOrder_whenVersionMismatch_throwsUnableToDeleteException" time="0.003"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenVersionMismatch_throwsUnableToUpdateException" time="0.004"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithPostTaxWrongType_throwsIllegalStateException" time="0.003"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="deleteOrder_whenDeleteItemReturnsEmptyAttributes_throwsIllegalStateException" time="0.003"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithOrderIdWrongType_throwsIllegalStateException" time="0.004"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenOrderIsNull_throwsIllegalArgumentException" time="0.001"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenGetItemReturnsHashMapWithCustomerIdWrongType_throwsIllegalStateException" time="0.003"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrder_whenOrderDoesNotExist_throwsOrderDoesNotExist" time="0.002"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="updateOrder_whenCustomerIdSetButEmpty_throwsIllegalArgumentException" time="0.001"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="deleteOrder_whenDeleteItemReturnsNoAttributes_throwsIllegalStateException" time="0.003"/>
  <testcase classname="com.amazon.dao.OrderDaoTest" name="getOrders_whenTableNotEmpty_butLastEvaluatedKeyHasOrderIdSetToWrongType_throwsIllegalStateException" time="0.005"/>
</testsuite>